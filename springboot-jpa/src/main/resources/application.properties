# 连接数据库的四大参数
spring.datasource.url=jdbc:mysql://localhost:3306/jpa?useSSL=false&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#jpa的相关配置
# 开发阶段的可以设置为true ，开启了你想工程：实际上线运行阶段：实体类和底层的数据表都固定了
# 数据库和java 逆向工程   正常工程
# 逆向工程：存在数据库的表，然后数据库表可以生成实体类
# 正向工程：先存在实体类，然后根据实体类，生成底层表
spring.jpa.generate-ddl=true

# create: 设置为create ，每次运行程序都会讲原来的数据表删除，然后重新创建一个表；
#create-drop：每次将创建一个数据表，数据表使用完毕之后，将数据表再次删除。
#none 讲该工能不生效
#update 如果你设定的实体发生了改变，数据表会更新：
#       如果数据库当中有数据表，就是用原来的表，没有数据表，就睡创建一个数据表，也是在开发经常使用的
#validate  实体类和数据表进行校验，如果属性或者个数不一致，就会抛异常。
spring.jpa.hibernate.ddl-auto=update

#操作实体对象的时候，会跟我们生产的sql语句：false不生成sql语句：
spring.jpa.show-sql=true

# 指定了数据的类型
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 指定使用的哪一种类型的数据库
spring.jpa.database=mysql







############################################################
#
# thymeleaf 静态资源配置
#
############################################################
#模板引擎
spring.thymeleaf.prefix=classpath:/templates/
##文件前缀
spring.freemarker.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
# 关闭缓存, 即时刷新, 上线生产环境需要改为true
spring.thymeleaf.cache=false


